// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
DesertMazeEntrance is DesertRoom

constants:

   include blakston.khd

resources:

   room_DesertMazeEntrance = DesertMazeEntrance.roo
   room_name_DesertMazeEntrance = "A labyrinth lost in the sands"

classvars:

   vrName = room_name_DesertMazeEntrance

   viTeleport_row = 48
   viTeleport_col = 148

properties:

   piBaseLight = LIGHT_DARK
   piOutside_factor = OUTDOORS_5 

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   prRoom = room_DesertMazeEntrance
   piRoom_num = RID_DESERTMAZEENTRANCE

messages:

   Constructed()
   {
      plGenerators = [ [25, 25],  [25, 50],  [25, 75],  [25, 100], 
                       [42, 25],  [42, 50],  [42, 75],  [42, 100],
                       [60, 25],  [60, 50],  [60, 75],  [60, 100],
                       [87, 25],  [87, 50],  [87, 75],  [87, 100],
                       [102, 25], [102, 50], [102, 75], [102, 100], 
                       [130, 25], [130, 50], [130, 75], [130, 100],
                       [160, 25], [160, 50], [160, 75], [160, 100],
                       [195, 25], [195, 50], [195, 75], [195, 100] ];

      propagate;
   }
 
   TryCreateMonster()
   {
      local iHour;
      
      iHour = Send(SYS,@GetHour);

      if iHour >= 1 AND iHour <= 7
      {
         plMonsters = [ [&XeoUnholy, 100] ];
      }
      else if iHour >= 8 AND iHour <= 20
      {
         plMonsters = [ [&XeoHoly, 100] ];
      }
      else if iHour >= 20 AND iHour <= 24
      {
         plMonsters = [ [&XeoUnholy, 100] ];
      }

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 100, 99, RID_MAZEFOYER, 1, 44, SET_ANGLE_WEST ],plExits);
      plExits = Cons([ 100, 100, RID_MAZEFOYER, 1, 44, SET_ANGLE_WEST ],plExits);

      plEdge_Exits = $;
      plEdge_Exits = Cons([ LEAVE_NORTH, RID_DESERTDUNES8, 60, 102, ROTATE_NONE ],plEdge_Exits);
      plEdge_Exits = Cons([ LEAVE_SOUTH, RID_DESERTDUNES5, 60, 102, ROTATE_NONE ],plEdge_Exits);
      plEdge_Exits = Cons([ LEAVE_WEST, RID_DESERTDUNES4, 60, 102, ROTATE_NONE ],plEdge_Exits);
      plEdge_Exits = Cons([ LEAVE_EAST, RID_DESERTDUNES9, 60, 102, ROTATE_NONE ],plEdge_Exits);

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////


// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
DeathRealmI3 is DeathRealm

constants:

   include blakston.khd

resources:

   room_DeathRealmI3 = i3.roo
   DeathRealmi3_msg1 = "Today does not seem like a particularly good day to drown in lava."

classvars:

   viTeleport_row = 13
   viTeleport_col = 12

   viWeatherZone = WEATHER_ZONE_BARLOQUE

properties:

   prRoom = room_DeathRealmI3
   piRoom_num = RID_DI3

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

messages:

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 6, 11, ROOM_LOCKED_DOOR, Needs_Key ],plExits);
      plExits = Cons([ 6, 12, ROOM_LOCKED_DOOR, Needs_Key ],plExits);
      
      plEdge_Exits = $;


      plEdge_Exits = Cons([LEAVE_EAST, RID_DJ3, 7, 2, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_DBADLAND2, 1, 22, ROTATE_NONE], plEdge_exits);

      plEdge_Exits = Cons([LEAVE_WEST, RID_DH3, 25, 47, ROTATE_NONE,ROW_IS_LESS_THAN,22], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_WEST, RID_DH3, 32, 47, ROTATE_NONE,ROW_IS_GREATER_THAN,21], plEdge_exits);
     
      propagate;
   }

   StandardLeaveDir(what = $,dir = $,pos = $,new_room_num = $)
   {
      if (dir = LEAVE_NORTH) and (IsClass(what,&Player))
      {
	      send(what,@MsgSendUser,#message_rsc = DeathRealmi3_msg1);
	      return;
      } 
                   
      propagate;
   }

   SomethingTryGo(what=$,row=$,col=$)
   {
      local i, each_obj;

      if (IsClass(what,&User)
         AND (row = 6 AND col = 11) OR (row = 6 AND col = 12))
      {
         if send(what,@HasBeatDR)
		      OR IsClass(what,&DM)
		   {
		      Send(what,@MsgSendUser,#message_rsc=Beat_DR);
			   Send(SYS,@UtilGoNearSquare,#what=what,
               #where=Send(SYS,@FindRoomByNum,#num=RID_DBAR_SOUTH),
               #new_row=46,#new_col=31,#new_angle=ANGLE_NORTH);
			 
			   return TRUE;
		   }
      	  
   		foreach i in Send(what,@GetHolderPassive)
         {
            each_obj = Send(what,@HolderExtractObject,#data=i);

            if IsClass(each_obj,&BarloqueKey)
            {
               Send(what,@MsgSendUser,#message_rsc=Key_Open);
               Send(SYS,@UtilGoNearSquare,#what=what,
                   #where=Send(SYS,@FindRoomByNum,#num=RID_DBAR_SOUTH),
                   #new_row=46,#new_col=31,#new_angle=ANGLE_NORTH);

               return TRUE;
            }
         }
		}

 		propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////


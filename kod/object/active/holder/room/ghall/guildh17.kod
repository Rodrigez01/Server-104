// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
GuildHall17 is GuildHall

constants:

   LEVER_REACTIVATE_DELAY = 2000

   TREASURE_ROW_MIN = 20
   TREASURE_ROW_MAX = 29
   TREASURE_COL_MIN = 16
   TREASURE_COL_MAX = 23
       
   STATUS_OKAY = 3
   
   GH17_FOYER_S = 1
   GH17_FOYER_N = 2

   include blakston.khd

resources:

   room_GuildHall17 = guildh17.roo
   room_name_GuildHall17 ="Green's workshop"
   GuildHall17_music = walk7.ogg
   GuildHall17_sound = down2.ogg

   guildhall17_cant_open = \
      "%s's magic defenses prevent you from opening the outer door."

   guildhall17_entrancedoor_open_sound = doorrsup.ogg
   guildhall17_entrancedoor_close_sound = doordown.ogg

classvars:

   vrName = room_name_GuildHall17

   viTeleport_row = 58
   viTeleport_col = 27

   viTerrain_type = TERRAIN_CITY | TERRAIN_GUILDHALL

   viWeatherZone = WEATHER_ZONE_MARION

   viPermanent_flags = ROOM_GUILD_PK_ONLY

   vrEntrance_open_sound = guildhall17_entrancedoor_open_sound
   vrEntrance_close_sound = guildhall17_entrancedoor_close_sound

   viNews_row = 25
   viNews_col = 24
   viNews_finerow = 24
   viNews_finecol = 56

   viLever_row = 31
   viLever_col = 15
   viLever_fine_row = 32
   viLever_fine_col = 52

   viQuality = 9

   viInner_teleport_row = 34
   viInner_teleport_col = 40
   viSeconds_til_close = 24

properties:

   prRoom = room_GuildHall17
   prMusic = GuildHall17_music
   piRoom_num = RID_GUILDH17

   piBaseLight = LIGHT_NICE

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   ptCloseNorth  = $
   ptCloseSouth  = $
   ptCloseSecret = $
   
messages:

   Constructor()
   {
      plGuild_doors = [[52,23],[52,24],[52,25]];

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 50, 27, RID_MARION_PLAN, 3, 84, ROTATE_NONE ],plExits);
      plExits = Cons([ 50, 28, RID_MARION_PLAN, 3, 85, ROTATE_NONE ],plExits);

      plExits = Cons([ 60, 27, RID_MARION_PLAN, 7, 84, ROTATE_NONE ],plExits);
      plExits = Cons([ 60, 28, RID_MARION_PLAN, 7, 85, ROTATE_NONE ],plExits);

      plEdge_Exits = $;

      plEdge_Exits = Cons([LEAVE_NORTH, RID_A1, 49, 23, ROTATE_NONE], plEdge_exits);

      return;
   }

   InFoyer(who=$)
   {
      local iSectorID;

      if who <> $
      {
         if Send(who,@GetOwner) <> self
         {
            return FALSE;
         }
      }
      
      if who = $
      {
         return FALSE;
      }

      iSectorID = Send(who,@GetSectorIDAtObject);

      if iSectorID = 54 OR iSectorID = 55
      {
         return GH17_FOYER_N;
      }

      if iSectorID = 50 OR iSectorID = 51
      {
         return GH17_FOYER_S;
      }

      return FALSE;
   }

   ValidEntry(what=$)
   {

      if Send(self,@InFoyer,#who=what)
      {
         // Since we have multiple foyers, let people enter the appropriate foyer
         return;
      }

      // Superclass teleports people to the One True Foyer(tm) if they enter
      // (or log on) inside when they're not normally allowed to enter.
      propagate;
   }
   
   SomethingTryGo(what = $,row = $,col = $)
   {
      local iFineRow, iFineCOl;

      iFineRow = Send(what,@GetFineRow);
      iFineCOl = Send(what,@GetFineCol);

      if Send(what,@GetSectorIDAtObject) = 52 OR Send(what,@GetSectorIDAtObject) = 56
      {
         if Send(what,@GetSectorIDAtObject) = 52
         {
            Send(self,@OpenSouthDoor);
            return TRUE;
         }
         else
         {
            Send(self,@OpenNorthDoor);
            return TRUE;
         }
      }

      if Send(what,@GetSectorIDAtObject) = 55
      {            
         if piStatus = STATUS_OKAY
            AND NOT Send(self,@CanEnter,#who=what)
         {
            // Send a message saying 'only members and their allies may enter.' 
            Send(what,@MsgSendUser,#message_rsc=guildhall17_cant_open,#parm1=vrName);
            return TRUE;
         }
         else
         {
            Send(self,@OpenNorthDoor);
            return TRUE;
         }

      }

      if Send(what,@GetSectorIDAtObject) = 51
      {        
         if piStatus = STATUS_OKAY
            AND NOT Send(self,@CanEnter,#who=what)
         {
            // Send a message saying 'only members and their allies may enter.' 
            Send(what,@MsgSendUser,#message_rsc=guildhall17_cant_open,#parm1=vrName);
            return TRUE;
         }
         else
         {
            Send(self,@OpenSouthDoor);
            return TRUE;
         }

         return TRUE;
      }

      if ((row = 32 AND (iFineRow >= 60 AND iFineRow <= 64)) OR (row = 33 AND (iFineRow >= 0 AND iFineRow <= 16))) AND (col >= 19 AND col <= 20)
      {
         Send(self,@SomethingMoved,#what=what,#new_row=33,#new_col=19,#fine_row=26,#fine_col=48);
         return TRUE;
      }
      
      if row = 33 AND (iFineRow >= 16 AND iFineRow <= 32) AND (col = 19 OR col = 20)
      {
         Send(self,@SomethingMoved,#what=what,#new_row=32,#new_col=19,#fine_row=60,#fine_col=48);
         return TRUE;
      }

      if ((row = 32 AND (iFineRow >= 60 AND iFineRow <= 64)) OR (row = 33 AND (iFineRow >= 0 AND iFineRow <= 16))) AND (col >= 27 AND col <= 28)
      {
         Send(self,@SomethingMoved,#what=what,#new_row=33,#new_col=27,#fine_row=32,#fine_col=32);
         return TRUE;
      }
      
      if row = 33 AND (iFineRow >= 16 AND iFineRow <= 32) AND (col = 27 OR col = 28)
      {
         Send(self,@SomethingMoved,#what=what,#new_row=33,#new_col=27,#fine_row=0,#fine_col=32);
         return TRUE;
      }

      if (row = 38 OR row = 39) AND col = 15 AND (iFineCOl >= 24 AND iFineCOl <= 46)
      {
         Send(self,@SomethingMoved,#what=what,#new_row=38,#new_col=16,#fine_row=48,#fine_col=0);
         return TRUE;
      }
      
      if (row = 38 OR row = 39) AND ((col = 15 AND (iFineCOl >= 48 AND iFineCOl <= 64)) OR (col = 16 AND (iFineCOl >= 0 AND iFineCOl <= 4)))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=38,#new_col=15,#fine_row=48,#fine_col=32);
         return TRUE;
      }
      
      if (row = 43 OR row = 44) AND col = 15 AND (iFineCOl >= 24 AND iFineCOl <= 46)
      {
         Send(self,@SomethingMoved,#what=what,#new_row=43,#new_col=16,#fine_row=32,#fine_col=0);
         return TRUE;
      }
      
      if (row = 43 OR row = 44) AND ((col = 15 AND (iFineCOl >= 48 AND iFineCOl <= 64)) OR (col = 16 AND (iFineCOl >= 0 AND iFineCOl <= 4)))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=43,#new_col=15,#fine_row=32,#fine_col=32);
         return TRUE;
      }

      if (row = 38 OR row = 39) AND ((col = 32 AND (iFineCOl >= 0 AND iFineCOl <= 16)) OR (col = 31 AND (iFineCOl >= 60 AND iFineCOl <= 64)))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=38,#new_col=32,#fine_row=48,#fine_col=32);
         return TRUE;
      }
      
      if (row = 38 OR row = 39) AND (col = 32 AND (iFineCOl >= 16 AND iFineCOl <= 48))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=38,#new_col=32,#fine_row=48,#fine_col=0);
         return TRUE;
      }

      if (row = 45 OR row = 46) AND ((col = 32 AND (iFineCOl >= 0 AND iFineCOl <= 16)) OR (col = 31 AND (iFineCOl >= 60 AND iFineCOl <= 64)))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=46,#new_col=32,#fine_row=0,#fine_col=32);
         return TRUE;
      }
      
      if (row = 45 OR row = 46) AND (col = 32 AND (iFineCOl >= 16 AND iFineCOl <= 48))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=46,#new_col=32,#fine_row=0,#fine_col=0);
         return TRUE;
      }

      if (row = 21 OR row = 22) AND ((col = 42 AND iFineCOl >= 28) OR (col = 43 AND iFineCOl <= 20))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=18,#new_col=43,#fine_row=44,#fine_col=52);
         return TRUE;
      }
      
      if (row = 18 OR row = 19) AND ((col = 43 AND iFineCOl >= 16) OR (col = 44 AND iFineCOl <= 20))
      {
         Send(self,@SomethingMoved,#what=what,#new_row=21,#new_col=42,#fine_row=60,#fine_col=56);
         return TRUE;
      }

      propagate;
   }

   OpenNorthDoor()
   {
      if ptCloseNorth = $
      {
         Send(self,@SetSector,#sector=20,#animation=ANIMATE_CEILING_LIFT,#height=200,#speed=25);
         Send(self,@SetSector,#sector=30,#animation=ANIMATE_CEILING_LIFT,#height=200,#speed=35);
         Send(self,@SomethingWaveRoom,#wave_rsc=vrEntrance_open_sound); 

         ptCloseNorth = CreateTimer(self,@CloseNorthDoor,7000);
      }

      return;
   }

   CloseNorthDoor()
   {
      Send(self,@SetSector,#sector=20,#animation=ANIMATE_CEILING_LIFT,#height=128,#speed=35);
      Send(self,@SetSector,#sector=30,#animation=ANIMATE_CEILING_LIFT,#height=128,#speed=25);
      Send(self,@SomethingWaveRoom,#wave_rsc=vrEntrance_close_sound);

      ptCloseNorth = $;

      return;
   }

   OpenSouthDoor()
   {
      if ptCloseSouth = $
      {
         Send(self,@SetSector,#sector=2,#animation=ANIMATE_CEILING_LIFT,#height=200,#speed=25);
         Send(self,@SetSector,#sector=3,#animation=ANIMATE_CEILING_LIFT,#height=200,#speed=35);
         Send(self,@SomethingWaveRoom,#wave_rsc=vrEntrance_open_sound); 

         ptCloseSouth = CreateTimer(self,@CloseSouthDoor,7000);
      }

      return;
   }

   CloseSouthDoor()
   {
      Send(self,@SetSector,#sector=2,#animation=ANIMATE_CEILING_LIFT,#height=128,#speed=35);
      Send(self,@SetSector,#sector=3,#animation=ANIMATE_CEILING_LIFT,#height=128,#speed=25);
      Send(self,@SomethingWaveRoom,#wave_rsc=vrEntrance_close_sound); 

      ptCloseSouth = $;

      return;
   }

   OpenSecretDoor()
   {
      if ptCloseSecret = $
      {
         Send(self,@SetSector,#sector=5,#animation=ANIMATE_CEILING_LIFT,#height=308,#speed=35);
         Send(self,@SetSector,#sector=6,#animation=ANIMATE_CEILING_LIFT,#height=308,#speed=28);
         Send(self,@SetSector,#sector=7,#animation=ANIMATE_CEILING_LIFT,#height=308,#speed=21);
         Send(self,@SetSector,#sector=8,#animation=ANIMATE_CEILING_LIFT,#height=308,#speed=14);
         Send(self,@SomethingWaveRoom,#wave_rsc=vrEntrance_open_sound); 

         ptCloseSecret = CreateTimer(self,@CloseSecretDoor,9000);
      }

      return;
   }

   CloseSecretDoor()
   {
      Send(self,@SetSector,#sector=5,#animation=ANIMATE_CEILING_LIFT,#height=218,#speed=14);
      Send(self,@SetSector,#sector=6,#animation=ANIMATE_CEILING_LIFT,#height=218,#speed=21);
      Send(self,@SetSector,#sector=7,#animation=ANIMATE_CEILING_LIFT,#height=218,#speed=28);
      Send(self,@SetSector,#sector=8,#animation=ANIMATE_CEILING_LIFT,#height=218,#speed=35);
      Send(self,@SomethingWaveRoom,#wave_rsc=vrEntrance_close_sound);

      ptCloseSecret = $;

      return;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=22,#new_col=17,#fine_row=48,#fine_col=16,#new_angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=26,#new_col=17,#fine_row=0,#fine_col=16,#new_angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=22,#new_col=22,#fine_row=48,#fine_col=16,#new_angle=ANGLE_WEST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=26,#new_col=22,#fine_row=0,#fine_col=16,#new_angle=ANGLE_WEST);

      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=21,#new_col=23,#fine_row=48,#fine_col=32,#new_angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&Chest),
            #new_row=29,#new_col=33,#fine_row=48,#fine_col=32,#new_angle=ANGLE_EAST);

      Send(self,@NewHold,#what=Create(&Fountain),#new_row=42,#new_col=24,#fine_row=12,#fine_col=8);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=5),#new_row=45,#new_col=6,#fine_row=32,#fine_col=4);

      Send(self,@NewHold,#what=Create(&Dice,#pair=FALSE),
           #new_row=39,#new_col=12,#fine_row=4,#fine_col=0,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&Dice,#pair=TRUE),
           #new_row=39,#new_col=13,#fine_row=4,#fine_col=16,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&Dice,#pair=FALSE),
           #new_row=40,#new_col=13,#fine_row=20,#fine_col=16,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&Dice,#pair=TRUE),
           #new_row=40,#new_col=12,#fine_row=20,#fine_col=0,#new_angle=ANGLE_NORTH);

      Send(self,@NewHold,#what=Create(&Pillow),
            #new_row=21,#new_col=32,#fine_row=48,#fine_col=16,#new_angle=ANGLE_WEST);

      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),#new_row=6,#new_col=50);
          
      Send(self,@NewHold,#what=Create(&Throne),#new_row=42,#new_col=10,#fine_row=32,#fine_col=40,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=45,#new_col=14,#fine_row=0,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=45,#new_col=13,#fine_row=32,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=47,#new_col=13,#fine_row=0,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=48,#new_col=13,#fine_row=16,#fine_col=0);

      Send(self,@NewHold,#what=Create(&Table),#new_row=40,#new_col=9,#fine_row=48,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=40,#new_col=8,#fine_row=48,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=40,#new_col=9,#fine_row=48,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=35,#new_col=10,#fine_row=56,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=35,#new_col=12,#fine_row=56,#fine_col=0);

      Send(self,@NewHold,#what=Create(&Stool),#new_row=40,#new_col=36,#fine_row=32,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=41,#new_col=37,#fine_row=48,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=42,#new_col=38,#fine_row=24,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=42,#new_col=39,#fine_row=24,#fine_col=56);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=41,#new_col=41,#fine_row=48,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=40,#new_col=42,#fine_row=48,#fine_col=0);

      Send(self,@NewHold,#what=Create(&Stool),#new_row=37,#new_col=34,#fine_row=32,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=38,#new_col=35,#fine_row=0,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=38,#new_col=36,#fine_row=48,#fine_col=8);

      Send(self,@NewHold,#what=Create(&Table),#new_row=42,#new_col=33,#fine_row=40,#fine_col=40);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=42,#new_col=33,#fine_row=0,#fine_col=8);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=43,#new_col=34,#fine_row=16,#fine_col=8);

      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=41,#fine_row=0,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=42,#fine_row=0,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=43,#fine_row=0,#fine_col=48);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=45,#fine_row=0,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=46,#fine_row=0,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=47,#new_col=46,#fine_row=48,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=46,#new_col=46,#fine_row=32,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=45,#new_col=46,#fine_row=12,#fine_col=16);

      Send(self,@NewHold,#what=Create(&Table),#new_row=44,#new_col=34,#fine_row=16,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=44,#new_col=33,#fine_row=16,#fine_col=30);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=44,#new_col=34,#fine_row=16,#fine_col=30);

      Send(self,@NewHold,#what=Create(&Table),#new_row=45,#new_col=37,#fine_row=16,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=44,#new_col=37,#fine_row=32,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=46,#new_col=37,#fine_row=0,#fine_col=16);

      Send(self,@NewHold,#what=Create(&Table),#new_row=48,#new_col=33,#fine_row=32,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=32,#fine_row=6,#fine_col=62);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=47,#new_col=34,#fine_row=58,#fine_col=2);

      Send(self,@NewHold,#what=Create(&Table),#new_row=49,#new_col=35,#fine_row=0,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=48,#new_col=35,#fine_row=16,#fine_col=16);
      Send(self,@NewHold,#what=Create(&Stool),#new_row=49,#new_col=35,#fine_row=40,#fine_col=48);

      Send(self,@NewHold,#what=Create(&SpinningWheel),
           #new_row=27,#new_col=33,#fine_row=0,#fine_col=32);
      Send(self,@NewHold,#what=Create(&Loom),
           #new_row=24,#new_col=46,#fine_row=32,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Forge),
           #new_row=21,#new_col=34,#fine_row=32,#fine_col=32);
      Send(self,@NewHold,#what=Create(&KocatanForge),
           #new_row=21,#new_col=37,#fine_row=32,#fine_col=32);
      Send(self,@NewHold,#what=Create(&CraftingAnvil),
           #new_row=27,#new_col=37,#fine_row=0,#fine_col=32);
      Send(self,@NewHold,#what=Create(&ShaveHorse),
           #new_row=33,#new_col=46,#fine_row=32,#fine_col=0);
      Send(self,@NewHold,#what=Create(&TanningRack),
           #new_row=35,#new_col=39,#fine_row=0,#fine_col=0,
            #new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&KocatanTanningRack),
           #new_row=35,#new_col=43,#fine_row=0,#fine_col=0,
            #new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&SplittingStump),
           #new_row=27,#new_col=43,#fine_row=0,#fine_col=0);
      Send(self,@NewHold,#what=Create(&KocatanSplittingStump),
           #new_row=32,#new_col=37,#fine_row=0,#fine_col=32);
      Send(self,@NewHold,#what=Create(&GoadsAnvil),
           #new_row=38,#new_col=39,#fine_row=48,#fine_col=16);
      Send(self,@NewHold,#what=Create(&KocatanAnvil),
           #new_row=32,#new_col=43,#fine_row=0,#fine_col=0);

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////

// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Gift is PassiveItem

constants:

   include blakston.khd
   include protocol.khd

resources:

   include gift.lkod

   gift_name_rsc = "gift"
   gift_icon_rsc = package.bgf
   gift_desc_rsc = \
      "This is a gift from the gods, to thank you for your patience and "
      "your patronage."
   gift_open = "With unbridled delight, you open the gift to find %s%s inside!"
   gift_desc_name = \
      "This is a neatly wrapped present.  A tag attached to the bow reads, "
      "'From %q with love'."

classvars:

   vrName = gift_name_rsc
   vrIcon = gift_icon_rsc
   vrDesc = gift_desc_rsc

   viUse_type = ITEM_SINGLE_USE
   viUse_amount = 1

   viBulk = 50
   viWeight = 50

   viValue_average = 30

properties:

   poGiftGiver = $     /// if poGiftGIver = $, then it's from the gods.
   plContents  = $
   poContents  = $
   poColor     = $
   plItematt   = $
   poItematt   = $

messages:

   Constructor(contents = $, giver = $)
   {
      if contents <> $
      {
         if Send(contents,@GetOwner) <> $
         {
            Send(Send(contents,@GetOwner),@LeaveHold,#what=contents);
            Send(contents,@NewOwner,#what=$);
         }

         poGiftGiver = giver;
         poContents = contents;
      }


      propagate;
   }

   GetValue()
   {
      return 10;
   }

   DoBaseDesc()
   {
      if poGiftGiver = $
      {
         AddPacket(4, vrDesc);

         return;
      }

      AddPacket(4,gift_desc_name, 6,Send(poGiftGiver,@GetTrueName));

      return;
   }

   ReqNewApply()
   {
      return TRUE;
   }

   NewApplied(what = $)
   {
      local oldOwner, oItemAtt, iChance;

      if poContents = $
      {
         poContents = Nth(plContents,Random(1,length(plContents)));

         poContents = Create(poContents);
      }
      
      if IsClass(poContents,&GuildShield)
      {
         Send(poContents,@Randomize);
      }

      iChance = Random(1,100);

      if iChance < 31
      AND NOT IsClass(poContents,&GuildShield)
      AND NOT IsClass(poContents,&Bow)
      AND NOT IsClass(poContents,&Necklace)
      AND NOT IsClass(poContents,&Instrument)
      AND NOT IsClass(poContents,&AttackModifier)
      AND NOT IsClass(poContents,&NumberItem)
      {
         poColor = send(self,@GetColor);
         Send(poContents,@SetItemColor,#flags=poColor);
      }

      if plItematt <> $ AND NOT IsClass(poContents,&NumberItem)
      {
         if IsClass(poContents,&Necklace)
         OR IsClass(poContents,&FaceMask)
         OR IsClass(poContents,&ShirtBase)
         OR IsClass(poContents,&Pants)
         {
            iChance = Random(1,100);

            if iChance <= 10
            {
               poItematt = Nth(plItematt,Random(1,length(plItematt)));
               oItemAtt = Send(SYS,@FindItemAttByNum,#num=poItematt);
               Send(oItemAtt,@AddtoItem,#oItem=poContents,#iPower=random(1,9));
               send(poContents,@RevealHiddenAttributes);
            }
         }
         else
         {
            poItematt = Nth(plItematt,Random(1,length(plItematt)));
            oItemAtt = Send(SYS,@FindItemAttByNum,#num=poItematt);
            Send(oItemAtt,@AddtoItem,#oItem=poContents,#iPower=random(1,9));
            send(poContents,@RevealHiddenAttributes);
         }
      }


      if IsClass(poContents,&Reagent)
      {
         Send(poContents,@AddNumber,#number=Random(2499,3499));
      }

      Send(poOwner,@MsgSendUser,#message_rsc=gift_open,
            #parm1=Send(poContents,@GetIndef),#parm2=Send(poContents,@GetName));

      oldOwner = poOwner;
      Send(poOwner,@LeaveHold,#what=self);
      Send(self,@NewOwner,#what=$);
      Send(oldOwner,@NewHold,#what=poContents);

      poContents = $;

      Send(self,@Delete);

      return;
   }
   
   GetColor()
   {
      local lColors;

      if IsClass(poContents,&NeruditeArmor)
      OR IsClass(poContents,&LeatherArmor)
      OR IsClass(poContents,&GoldShield)
      OR IsClass(poContents,&Circlet)
      OR IsClass(poContents,&IvyCirclet)
      OR IsClass(poContents,&SimpleHelm)
      {
         lColors = [ 1111,1112,1110,1109,69,78,57,1335 ];
      }
      else
      {
         lColors = [ 40,33,86,2158,44,48,29,13,15,42,77,78,79 ];
      }

      poColor = Nth(lColors,Random(1,length(lColors)));

      return poColor;
   }

   Delete()
   {
      if poContents <> $
      {
         Send(poContents,@Delete);
      }

      poContents = $;
      poGiftGiver = $;

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
